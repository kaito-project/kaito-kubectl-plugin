name: Create release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v1.0.0)"
        required: true
        type: string

env:
  GO_VERSION: "1.24"

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  pre-release-validation:
    name: Pre-Release Validation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout the repository at the release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          fetch-depth: 0

      - name: Validate inputs
        run: |
          echo "Creating release ${{ github.event.inputs.tag }}"
          if [[ ! "${{ github.event.inputs.tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Release version must follow format vX.Y.Z"
            exit 1
          fi

      - id: check-tag
        name: Check for Tag
        run: |
          TAG=${{ github.event.inputs.tag }}
          if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
            echo "create_tag=$(echo 'false' )" >> $GITHUB_OUTPUT
          else
            echo "create_tag=$(echo 'true' )" >> $GITHUB_OUTPUT
          fi
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT

      - name: Create tag
        if: steps.check-tag.outputs.create_tag == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ github.event.inputs.tag }}',
              sha: context.sha
            })

  goreleaser:
    name: GoReleaser and Krew Release
    runs-on: ubuntu-latest
    needs: [pre-release-validation]
    steps:
      - name: Checkout the repository at the release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          version: latest
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.event.inputs.tag }}
      
      - name: Update new version in krew-index
        uses: rajatjindal/krew-release-bot@v0.0.47
        with:
          krew_template_file: ./krew/kaito.yaml
